require("dotenv").config();
const express = require("express");
const mongoose = require("mongoose");
const axios = require("axios");
const { v4: uuidv4 } = require("uuid");
const helmet = require("helmet");
const BitcoinPrice = require("./models/BitcoinPrice");

const app = express();
app.use(express.json());
app.use(helmet()); // Sécurité HTTP

// Connexion MongoDB
mongoose
  .connect(process.env.MONGO_URI, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => console.log(" MongoDB connecté"))
  .catch((err) => console.error(" Erreur MongoDB :", err));

// Route pour récupérer et stocker le prix du Bitcoin
app.get("/fetch-bitcoin-price", async (req, res) => {
  try {
    const response = await axios.get(process.env.API_URL);
    const data = response.data.data;

    const newPrice = new BitcoinPrice({
      amount: data.amount,
      base: data.base,
      currency: data.currency,
      uuid: uuidv4(),
    });

    await newPrice.save();
    res.status(201).json({ message: "Prix du Bitcoin enregistré", data: newPrice });
  } catch (error) {
    console.error("Erreur API :", error);
    res.status(500).json({ message: "Erreur serveur" });
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(` Serveur démarré sur le port ${PORT}`));
